spring.application.name=order-service
spring.datasource.url=jdbc:postgresql://localhost:5432/order_service
spring.datasource.username=postgres
spring.datasource.password=devsecops
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
server.port=8081
inventory.url=http://localhost:8082

spring.flyway.enabled=false

springdoc.swagger-ui.config-url=/swagger-ui.html
springdoc.api-docs.path=/api-docs


#Actuator Endpoints
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

#Resilience4J
resilience4j.circuitbreaker.configs.default.register-health-indicator=true
resilience4j.circuitbreaker.configs.default.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.configs.default.sliding-window-size=10
resilience4j.circuitbreaker.configs.default.failure-rate-threshold=50
resilience4j.circuitbreaker.configs.default.wait-duration-in-open-state=5s
resilience4j.circuitbreaker.configs.default.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.configs.default.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.configs.default.minimum-number-of-calls=5

#Resilience4J Timeout
resilience4j.timelimiter.configs.default.timeout-duration=3s

#Resilience Retry
resilience4j.retry.configs.default.max-attempts=3
resilience4j.retry.configs.default.wait-duration=5s



##Kafka Properties
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic=order-placed
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
#spring.kafka.producer.properties.spring.json.type.mapping=event:com.techie.microservices.order_service.event.OrderPlacedEvent

spring.kafka.producer.properties.schema.registry.url=http://127.0.0.1:8085

#Promethes
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.observations.key-values.application=order-service
management.tracing.sampling.probability=1.0


